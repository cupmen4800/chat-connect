steps:
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '.'
  - '-f'
  - './apps/private-api/Dockerfile'
  - '-t'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/chat-connect/chat-connect-private-api:${_COMMIT_SHA}'
  automapSubstitutions: true
  secretEnv: ['DATABASE_URL']
# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'us-central1-docker.pkg.dev/$PROJECT_ID/chat-connect/chat-connect-private-api:${_COMMIT_SHA}']
- id: set db env
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    export DATABASE_URL=$(gcloud secrets versions access latest --secret=DATABASE_URL)
  secretEnv: ['DATABASE_URL']
- id: migrate db
  name: node:22-slim
  script: |
    apt-get update
    apt-get install -y openssl
    corepack enable
    npm install -g corepack@latest
    pnpm install --frozen-lockfile
    echo $DATABASE_URL
    pnpx prisma migrate deploy --schema=./apps/private-api/src/prisma/schema.prisma
  secretEnv: ['DATABASE_URL']
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'gcloud'
  args:
  - 'run'
  - 'deploy'
  - 'chat-connect-private-api'
  - '--image'
  - 'us-central1-docker.pkg.dev/$PROJECT_ID/chat-connect/chat-connect-private-api:${_COMMIT_SHA}'
  - '--region'
  - 'us-central1'
  - '--update-secrets=DATABASE_URL=DATABASE_URL:latest'
  - ' --service-account'
  - '${_SERVICE_ACCOUNT}'
  secretEnv: ['DATABASE_URL']
images:
- 'us-central1-docker.pkg.dev/$PROJECT_ID/chat-connect/chat-connect-private-api:${_COMMIT_SHA}'
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/DATABASE_URL/versions/latest
    env: DATABASE_URL
serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/${_SERVICE_ACCOUNT}'
options:
  logging: 'CLOUD_LOGGING_ONLY'
