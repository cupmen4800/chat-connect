name: Web Deploy
on: 
  push:
    branches:
      - 'main'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      web: ${{ steps.filter.outputs.web }}
      private_api: ${{ steps.filter.outputs.private_api }}
      public_api: ${{ steps.filter.outputs.public_api }}
    steps:
      - name: Check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: |
            web:
              - 'apps/web/**'
            private_api:
              - 'apps/private-api/**'
            public_api:
              - 'apps/public-api/**'
  web-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: 'chat-connect-production'
          workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: 'Build and push container'
        run: |-
          docker build -t "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-web:${{ github.sha }}" . -f ./apps/web/Dockerfile
          docker push "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-web:${{ github.sha }}"

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy chat-connect-web --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-web:${{ github.sha }} --region us-central1
  private-api-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.private_api == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: 'chat-connect-production'
          workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: setup pnpm
        uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json

      - name: setup nodejs
        uses: actions/setup-node@v4
        with:
          node-version: 22
          node-version-file: package.json
          cache: pnpm

      - name: migrate db
        run: |-
          sudo apt-get update
          sudo apt-get install -y openssl
          pnpm install --frozen-lockfile
          DATABASE_URL=$(gcloud secrets versions access 1 --secret=DATABASE_URL) pnpx prisma migrate deploy --schema=./apps/private-api/src/prisma/schema.prisma

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: 'Build and push container'
        run: |-
          docker build -t "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-private-api:${{ github.sha }}" . -f ./apps/private-api/Dockerfile
          docker push "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-private-api:${{ github.sha }}"

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy chat-connect-private-api --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-private-api:${{ github.sha }} --region us-central1 --update-secrets=DATABASE_URL=DATABASE_URL:1
  public-api-deploy:
    needs: changes
    if: ${{ needs.changes.outputs.public_api == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: 'chat-connect-production'
          workload_identity_provider: '${{ secrets.GCP_WIF_PROVIDER }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: 'Docker auth'
        run: |-
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: 'Build and push container'
        run: |-
          docker build -t "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-public-api:${{ github.sha }}" . -f ./apps/public-api/Dockerfile
          docker push "us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-public-api:${{ github.sha }}"

      - name: 'Deploy to Cloud Run'
        run: |-
          gcloud run deploy chat-connect-public-api --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/chat-connect/chat-connect-public-api:${{ github.sha }} --region us-central1
